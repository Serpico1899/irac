import { object, string, number, boolean, array, enums, optional } from "@deps";

export const searchCoursesValidator = () => ({
  set: {
    query: optional(string()),
    category_id: optional(string()),
    tags: optional(array(string())),
    level: optional(enums(["Beginner", "Intermediate", "Advanced"])),
    type: optional(enums(["Course", "Workshop", "Bootcamp", "Seminar"])),
    instructor_id: optional(string()),
    language: optional(enums(["fa", "en", "both"])),
    min_price: optional(number()),
    max_price: optional(number()),
    is_free: optional(boolean()),
    duration_min: optional(number()),
    duration_max: optional(number()),
    start_date_from: optional(string()),
    start_date_to: optional(string()),
    enrollment_status: optional(enums(["open", "closed", "full", "upcoming"])),
    has_certificate: optional(boolean()),
    min_rating: optional(number()),
    featured_only: optional(boolean()),
    sort_by: optional(enums([
      "relevance",
      "created_at",
      "start_date",
      "price_asc",
      "price_desc",
      "rating",
      "popularity",
      "alphabetical",
      "enrollment_count"
    ])),
    page: optional(number()),
    limit: optional(number()),
    include_instructor: optional(boolean()),
    include_category: optional(boolean()),
    include_tags: optional(boolean()),
    include_image: optional(boolean()),
  },
  get: {
    query: optional(string()),
    category: optional(string()),
    tags: optional(string()),
    level: optional(string()),
    type: optional(string()),
    instructor: optional(string()),
    language: optional(string()),
    min_price: optional(string()),
    max_price: optional(string()),
    free: optional(string()),
    duration_min: optional(string()),
    duration_max: optional(string()),
    start_from: optional(string()),
    start_to: optional(string()),
    enrollment: optional(string()),
    certificate: optional(string()),
    min_rating: optional(string()),
    featured: optional(string()),
    sort: optional(string()),
    page: optional(string()),
    limit: optional(string()),
    populate: optional(string()),
  }
});
