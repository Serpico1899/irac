import { object, string, number, boolean, array, enums, optional } from "@deps";

export const searchContentValidator = () => ({
  set: {
    query: optional(string()),
    content_types: optional(array(enums(["Course", "Article", "Workshop", "Product"]))),
    category_id: optional(string()),
    tags: optional(array(string())),
    level: optional(enums(["Beginner", "Intermediate", "Advanced"])),
    language: optional(enums(["fa", "en", "both"])),
    min_price: optional(number()),
    max_price: optional(number()),
    is_free: optional(boolean()),
    date_from: optional(string()),
    date_to: optional(string()),
    duration_min: optional(number()),
    duration_max: optional(number()),
    min_rating: optional(number()),
    instructor_id: optional(string()),
    author_id: optional(string()),
    featured_only: optional(boolean()),
    sort_by: optional(enums([
      "relevance",
      "created_at",
      "updated_at",
      "price_asc",
      "price_desc",
      "rating",
      "popularity",
      "alphabetical",
      "view_count"
    ])),
    page: optional(number()),
    limit: optional(number()),
    include_facets: optional(boolean()),
  },
  get: {
    query: optional(string()),
    content_types: optional(string()),
    category: optional(string()),
    tags: optional(string()),
    level: optional(string()),
    language: optional(string()),
    min_price: optional(string()),
    max_price: optional(string()),
    free: optional(string()),
    date_from: optional(string()),
    date_to: optional(string()),
    duration_min: optional(string()),
    duration_max: optional(string()),
    min_rating: optional(string()),
    instructor: optional(string()),
    author: optional(string()),
    featured: optional(string()),
    sort: optional(string()),
    page: optional(string()),
    limit: optional(string()),
    facets: optional(string()),
  }
});
