import { object, string, number, boolean, array, enums, optional } from "@deps";

export const searchArticlesValidator = () => ({
  set: {
    query: optional(string()),
    category_id: optional(string()),
    tags: optional(array(string())),
    type: optional(enums(["Article", "News", "Research", "Tutorial", "Interview"])),
    author_id: optional(string()),
    language: optional(enums(["fa", "en", "both"])),
    published_from: optional(string()),
    published_to: optional(string()),
    min_reading_time: optional(number()),
    max_reading_time: optional(number()),
    min_view_count: optional(number()),
    min_like_count: optional(number()),
    has_comments: optional(boolean()),
    featured_only: optional(boolean()),
    pinned_only: optional(boolean()),
    sort_by: optional(enums([
      "relevance",
      "published_at",
      "created_at",
      "updated_at",
      "view_count",
      "like_count",
      "comment_count",
      "alphabetical",
      "reading_time"
    ])),
    page: optional(number()),
    limit: optional(number()),
    include_author: optional(boolean()),
    include_category: optional(boolean()),
    include_tags: optional(boolean()),
    include_image: optional(boolean()),
    include_stats: optional(boolean()),
  },
  get: {
    query: optional(string()),
    category: optional(string()),
    tags: optional(string()),
    type: optional(string()),
    author: optional(string()),
    language: optional(string()),
    published_from: optional(string()),
    published_to: optional(string()),
    min_reading_time: optional(string()),
    max_reading_time: optional(string()),
    min_views: optional(string()),
    min_likes: optional(string()),
    comments: optional(string()),
    featured: optional(string()),
    pinned: optional(string()),
    sort: optional(string()),
    page: optional(string()),
    limit: optional(string()),
    populate: optional(string()),
  }
});
